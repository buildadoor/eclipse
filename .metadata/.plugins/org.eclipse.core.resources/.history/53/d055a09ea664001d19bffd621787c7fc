<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
<link href="/a00_com/a01_common.css" rel="stylesheet">
<style type="text/css">
/*

*/
</style>
<script type="text/javascript">
/*
 # js의 함수 처리
 1. 함수는 기능 처리를 위한 코드의 집합체라고 할 수 있다.
 2. 기본형식
    function 함수명(매개변수,...){
      프로세스 처리
      
      return 리턴값;
}
 */
    function plus(num01, num02){
       var sum = num01 + num02;
       return sum;    
    }
   //alert( plus(10,20));
    
   // ex) 물건가격과 갯수를 매개변수로 전달해서 총합계를 리턴하여 alert()로 로딩하세요.
    function calcu(price,cnt){
       var total = price*cnt;
       return total;
    }
    // alert(calcu(20000,4));
    // console.log(calcu(20000,4));
    /*
 # 이벤트와 이벤트핸들러 함수 처리
 1. js에서는 속성으로 on이벤트명="이벤트핸들러"를 통해서
 해당 이벤트가 발생했을 때, 처리할 코드를 특정한 함수를 통해서 정의한 내용을 수행할 수 있다.
 2. 처리 순서
 	1) 이벤트 핸들러 함수 선언 : 이벤트를 통해서 처리할 내용 함수 선언
 	2) 이벤트 속성 선언 및 이벤트 핸들러 함수 호출
 		태그 on이벤트명="이벤트 핸들러 함수()"
    3) 이벤트 핸들러에 매개변수 전달 
    	함수에 매개변수를 선언하여 문자열, 숫자 데이터를 전달할 수 있다.
 		*/
    function call01(){
 		alert("안녕하세요");
 	}
    function call02(name){
 		alert("안녕하세요"+name);
 	}
    function call03(num01,num02){
 		alert(num01+"+"+num02+"="+(num01+num02));
 	}
</script>
</head>
<body>
   <h1 onclick="call01()">이벤트 핸들러 호출!! (클릭)</h1>
   <h1 onclick="call02('홍길동')">이벤트 핸들러 호출!!(매개변수-문자)(클릭)</h1>
   <h1 onclick="call03(4,5)">이벤트 핸들러 호출!!(매개변수-숫자)(클릭)</h1>
</body>
<script>

</script>

</html>